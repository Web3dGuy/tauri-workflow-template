@use 'sass:map';
@use 'sass:list';
@use 'variables' as *;

// =================================
// Tauri Workflow Template - Modern SCSS Mixins
// Reusable mixins for common patterns with modern features
// =================================

// =================================
// RESPONSIVE DESIGN MIXINS
// =================================

// Responsive breakpoint mixin with mobile-first approach
@mixin respond-to($breakpoint) {
  @if map.has-key($breakpoint-map, $breakpoint) {
    $bp: map.get($breakpoint-map, $breakpoint);

    @media (min-width: $bp) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$breakpoint}` not found in breakpoint map";
  }
}

// Responsive between breakpoints
@mixin respond-between($min-bp, $max-bp) {
  @if map.has-key($breakpoint-map, $min-bp) and map.has-key($breakpoint-map, $max-bp) {
    $min: map.get($breakpoint-map, $min-bp);
    $max: map.get($breakpoint-map, $max-bp) - 1px;

    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else {
    @warn "Breakpoints `#{$min-bp}` or `#{$max-bp}` not found";
  }
}

// Legacy mobile support (max-width)
@mixin mobile {
  @media (max-width: ($breakpoint-mobile - 1px)) {
    @content;
  }
}

// Tablet and up
@mixin tablet {
  @include respond-to(md) {
    @content;
  }
}

// Desktop and up
@mixin desktop {
  @include respond-to(lg) {
    @content;
  }
}

// =================================
// MODERN LAYOUT MIXINS
// =================================

// Flexbox utilities
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-flow: $direction $wrap;
  justify-content: $justify;
  align-items: $align;
}

// Grid utilities
@mixin grid($columns: 1fr, $rows: auto, $gap: 1rem) {
  display: grid;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  gap: $gap;
}

// Center content with flexbox
@mixin center($direction: both) {
  display: flex;
  
  @if $direction == both {
    justify-content: center;
    align-items: center;
  } @else if $direction == horizontal {
    justify-content: center;
  } @else if $direction == vertical {
    align-items: center;
  }
}

// Absolute positioning with optional centering
@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $center: false) {
  position: absolute;
  
  @if $center {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else {
    inset: $top $right $bottom $left;
  }
}

// =================================
// VISUAL EFFECTS MIXINS
// =================================

// Modern glass morphism effect with fallbacks
@mixin glass-morphism($blur: 8px, $opacity: 0.4, $border-opacity: 0.3) {
  backdrop-filter: blur($blur);
  background: rgba(51, 65, 85, $opacity);
  border: var(--border-contrast, 1px) solid rgba(148, 163, 184, $border-opacity);
  
  // Fallback for browsers without backdrop-filter
  @supports not (backdrop-filter: blur(1px)) {
    background: rgb(30 41 59 / 90%);
  }
}

// Enhanced box shadow with design system
@mixin shadow($size: md, $color: null) {
  @if $color {
    // Custom color shadow
    @if $size == sm {
      box-shadow: 0 2px 4px rgba($color, 0.1);
    } @else if $size == md {
      box-shadow: 0 4px 8px rgba($color, 0.15);
    } @else if $size == lg {
      box-shadow: 0 8px 24px rgba($color, 0.3);
    } @else if $size == xl {
      box-shadow: 0 12px 32px rgba($color, 0.4);
    } @else {
      box-shadow: $shadow-lg;
    }
  } @else {
    // Use predefined shadows
    @if $size == sm {
      box-shadow: $shadow-sm;
    } @else if $size == md {
      box-shadow: $shadow-md;
    } @else if $size == lg {
      box-shadow: $shadow-lg;
    } @else if $size == xl {
      box-shadow: $shadow-xl;
    } @else if $size == 2xl {
      box-shadow: $shadow-2xl;
    } @else if $size == inset {
      box-shadow: $shadow-inset;
    } @else {
      box-shadow: $shadow-md;
    }
  }
}

// Gradient background with system colors
@mixin gradient-bg($gradient-var) {
  background: #{$gradient-var};
}

// Text gradient effect
@mixin text-gradient($gradient) {
  background: $gradient;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  color: transparent;
}

// =================================
// INTERACTION MIXINS
// =================================

// Enhanced button hover with motion preferences
@mixin button-hover-transform($translateY: -1px, $scale: 1.02) {
  transform: translateY($translateY) scale($scale);
  transition: 
    transform $transition-fast,
    box-shadow $transition-fast,
    background-color $transition-fast;
  
  // Respect reduced motion preference
  @media (prefers-reduced-motion: reduce) {
    transform: none;
    transition: background-color $transition-fast;
  }
}

// Modern focus ring with better accessibility
@mixin focus-ring($color: $color-primary, $offset: 2px, $width: 2px) {
  outline: $width solid $color;
  outline-offset: $offset;
  
  // Fallback for older browsers
  @supports not (outline-offset: 1px) {
    box-shadow: 0 0 0 $offset transparent, 0 0 0 ($offset + $width) $color;
  }
  
  // High contrast mode support
  @media (prefers-contrast: high) {
    outline-width: calc(var(--border-contrast, 1px) * 2);
  }
}

// Card hover effect with motion preferences
@mixin card-hover-effect($translateY: -2px, $shadow-size: xl) {
  transform: translateY($translateY);

  @include shadow($shadow-size);

  transition: 
    transform $transition-normal,
    box-shadow $transition-normal;
  
  @media (prefers-reduced-motion: reduce) {
    transform: none;
    transition: box-shadow $transition-normal;
  }
}

// =================================
// FORM & INPUT MIXINS
// =================================

// Input base styling with modern features
@mixin input-base($bg-color: $color-slate-800, $border-color: $color-slate-600) {
  background: $gradient-input;
  border: var(--border-contrast, 1px) solid $border-color;
  color: $color-slate-200;
  border-radius: $border-radius-md;
  transition: 
    border-color $transition-normal,
    box-shadow $transition-normal,
    background-color $transition-normal;

  @include shadow(sm);
  
  &::placeholder {
    color: $color-slate-400;
    opacity: 0.7;
  }
}

// Input focus state with enhanced accessibility
@mixin input-focus($color: $color-primary) {
  border-color: $color;

  @include shadow(md, $color);

  background: linear-gradient(135deg, $color-slate-800 0%, rgba($color, 0.15) 100%);
  outline: none;
  
  // Ensure focus is visible in high contrast mode
  @media (prefers-contrast: high) {
    border-width: var(--border-contrast, 2px);
  }
}

// =================================
// TEXT & TYPOGRAPHY MIXINS
// =================================

// Text selection control with better UX
@mixin no-select {
  user-select: none;
  
  // Better touch interaction
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}

// Allow text selection
@mixin allow-select {
  user-select: text;
}

// Fluid typography with clamp
@mixin fluid-text($min-size, $max-size, $min-width: 320px, $max-width: 1200px) {
  $slope: ($max-size - $min-size) / ($max-width - $min-width);
  $intersection: $min-size - $slope * $min-width;

  font-size: clamp(#{$min-size}, #{$intersection} + #{$slope * 100vw}, #{$max-size});
}

// Text truncation with ellipsis
@mixin truncate($max-width: 100%) {
  max-width: $max-width;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Multi-line text truncation
@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// =================================
// SCROLLBAR MIXINS
// =================================

// Perfect scrollbar container
@mixin scrollbar-container {
  position: relative;
  overflow: hidden;
}

// Custom scrollbar styling
@mixin custom-scrollbar(
  $track-color: transparent,
  $thumb-color: $color-slate-600,
  $thumb-hover-color: $color-slate-500,
  $width: 8px
) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: calc($width / 2);
    border: 1px solid $color-slate-700;
    
    &:hover {
      background: $thumb-hover-color;
    }
  }
  
  // Modern scrollbar for Firefox
  scrollbar-color: $thumb-color $track-color;
  scrollbar-width: thin;
}

// =================================
// ANIMATION & TRANSITION MIXINS
// =================================

// Animation with motion preferences
@mixin animate($name, $duration: $transition-normal, $easing: ease, $delay: 0s, $fill-mode: both) {
  animation: $name $duration $easing $delay $fill-mode;
  
  @media (prefers-reduced-motion: reduce) {
    animation-duration: 0.01ms;
    animation-iteration-count: 1;
  }
}

// Transition with motion preferences
@mixin transition($properties...) {
  $transitions: ();
  
  @each $prop in $properties {
    $transitions: list.append($transitions, #{$prop} #{$transition-normal}, comma);
  }
  
  transition: $transitions;
  
  @media (prefers-reduced-motion: reduce) {
    transition-duration: 0.01ms;
  }
}

// =================================
// LEGACY MIXINS (for backward compatibility)
// =================================

// Connection state styling (legacy)
@mixin connection-state($color, $glow-intensity: 0.3) {
  border-color: $color;
  box-shadow: 
    $shadow-xl,
    0 0 0 2px rgba($color, 0.8),
    0 0 20px rgba($color, $glow-intensity),
    inset 0 1px 0 rgb(255 255 255 / 10%);
}

// Screen card base styles (legacy)
@mixin screen-card-base {
  position: absolute;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border-radius: $border-radius-lg;
  backdrop-filter: blur(8px);
  transition: transform $transition-fast, box-shadow $transition-normal, border-color $transition-fast;
}

// Blueprint.js override helper (legacy)
@mixin bp-override($selector, $important: true) {
  #{$selector} {
    @content;
  }
  
  .main-app #{$selector} {
    @content;
  }
  
  .bp6-dark #{$selector} {
    @content;
  }
}

 